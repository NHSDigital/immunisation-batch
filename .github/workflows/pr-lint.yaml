name: PR Quality Check
on: pull_request

jobs:
  link-ticket:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
     
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Check ticket name conforms to requirements
        run: echo ${{ github.event.pull_request.head.ref }} | grep -i -E -q "(apm-[0-9]+)|(apmspii-[0-9]+)|(adz-[0-9]+)|(amb-[0-9]+)|(dependabot\/)"
        continue-on-error: true

      - name: Grab ticket name
        if: contains(github.event.pull_request.head.ref, 'apm-') || contains(github.event.pull_request.head.ref, 'APM-') || contains(github.event.pull_request.head.ref, 'apmspii-') || contains(github.event.pull_request.head.ref, 'APMSPII-') || contains(github.event.pull_request.head.ref, 'adz-') || contains(github.event.pull_request.head.ref, 'ADZ-') || contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-')
        run: echo "TICKET_NAME=$(echo ${{ github.event.pull_request.head.ref }} | grep -i -o '\(apm-[0-9]\+\)\|\(apmspii-[0-9]\+\)\|\(adz-[0-9]\+\)|\(amb-[0-9]\+\)' | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
        continue-on-error: true

      - name: Comment on PR with link to JIRA ticket
        if: contains(github.event.pull_request.head.ref, 'apm-') || contains(github.event.pull_request.head.ref, 'APM-') || contains(github.event.pull_request.head.ref, 'apmspii-') || contains(github.event.pull_request.head.ref, 'APMSPII-') || contains(github.event.pull_request.head.ref, 'adz-') || contains(github.event.pull_request.head.ref, 'ADZ-') || contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-')
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            This branch is work on a ticket in the NHS Digital APM JIRA Project. Here's a handy link to the ticket:
            # [${{ env.TICKET_NAME }}](https://nhsd-jira.digital.nhs.uk/browse/${{ env.TICKET_NAME }})

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
       
      - name: Fetch and print the current branch name
        run: |
          run: echo "Branch name: ${{ github.head_ref }}"


      - name: Set up AWS credentials
        env:
          AWS_ACCESS_KEY_ID: "FOOBARKEY"
          AWS_SECRET_ACCESS_KEY: "FOOBARSECRET"
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY  

      - name: Install dependencies
        run: |
          pip install poetry moto==4.2.11 coverage redis botocore==1.35.49 simplejson

      - name: Run unit tests and generate coverage report for filenameprocessor
        run: |
          mkdir -p /home/runner/work/immunisation-batch/immunisation-batch/filenameprocessor/coverage_html_report
          poetry run coverage run -m unittest discover -s tests
          poetry run coverage report
          poetry run coverage xml -o /home/runner/work/immunisation-batch/immunisation-batch/filenameprocessor/coverage_html_report/filenameprocessor_coverage.xml
        working-directory: "/home/runner/work/immunisation-batch/immunisation-batch/filenameprocessor"
        continue-on-error: true

      - name: Run unit tests and generate coverage report for recordprocessor
        run: |
          mkdir -p /home/runner/work/immunisation-batch/immunisation-batch/recordprocessor/coverage_html_report
          poetry run coverage run -m unittest discover -s tests
          poetry run coverage report
          poetry run coverage xml -o /home/runner/work/immunisation-batch/immunisation-batch/recordprocessor/coverage_html_report/recordprocessor_coverage.xml
        working-directory: "/home/runner/work/immunisation-batch/immunisation-batch/recordprocessor"
        continue-on-error: true

      - name: Run unit tests and generate coverage report for recordforwarder
        run: |
          mkdir -p /home/runner/work/immunisation-batch/immunisation-batch/recordforwarder/coverage_html_report
          poetry run coverage run -m unittest discover -s tests
          poetry run coverage report
          poetry run coverage xml -o /home/runner/work/immunisation-batch/immunisation-batch/recordforwarder/coverage_html_report/recordforwarder_coverage.xml
        working-directory: "/home/runner/work/immunisation-batch/immunisation-batch/recordforwarder"
        continue-on-error: true

      - name: List coverage report file
        run: |
          ls -R /home/runner/work/immunisation-batch/immunisation-batch/filenameprocessor/coverage_html_report
          ls -R /home/runner/work/immunisation-batch/immunisation-batch/recordprocessor/coverage_html_report
          ls -R /home/runner/work/immunisation-batch/immunisation-batch/recordforwarder/coverage_html_report

      - name: Aggregate coverage reports
        run: |
          mkdir -p /home/runner/work/immunisation-batch/immunisation-batch/coverage_html_report
          rm -rf /home/runner/work/immunisation-batch/immunisation-batch/coverage_html_report/*
          mv /home/runner/work/immunisation-batch/immunisation-batch/filenameprocessor/coverage_html_report/filenameprocessor_coverage.xml /home/runner/work/immunisation-batch/immunisation-batch/coverage_html_report/filenameprocessor_coverage.xml
          mv /home/runner/work/immunisation-batch/immunisation-batch/recordprocessor/coverage_html_report/recordprocessor_coverage.xml /home/runner/work/immunisation-batch/immunisation-batch/coverage_html_report/recordprocessor_coverage.xml
          mv /home/runner/work/immunisation-batch/immunisation-batch/recordforwarder/coverage_html_report/recordforwarder_coverage.xml /home/runner/work/immunisation-batch/immunisation-batch/coverage_html_report/recordforwarder_coverage.xml

     

      # - name: Commit and push coverage reports
      #   if: success()
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git fetch origin ${{ github.ref_name }}
      #     git checkout ${{ github.ref_name }}
      #     git pull origin ${{ github.ref_name }}
      #     git add /home/runner/work/immunisation-batch/immunisation-batch/coverage_html_report/*.xml
      #     git commit -m "Add coverage index as XML"
      #     git push origin ${{ github.ref_name }}
