name: PR Quality Check
on: pull_request
jobs:
  link-ticket:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Upgrade pip and install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies with poetry
        run: poetry install
      
      - name: Find full path of filenameprocessor directory
        run: |
          FILEPATH=$(find . -type d -name "filenameprocessor" -exec realpath {} \;)
          echo "Found filenameprocessor directory at: $FILEPATH"
      - name: Run unit tests and generate coverage report for filenameprocessor
        run: |
          pip install coverage
          pip install moto==4.2.14
          pip install boto3
          
          poetry run coverage run -m unittest discover -s tests
          poetry run coverage report
          poetry run coverage html -d coverage_html_report
        working-directory: "/home/runner/work/immunisation-batch/immunisation-batch/filenameprocessor"
        continue-on-error: true

      - name: Upload filenameprocessor coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: filenameprocessor-coverage-report
          path: "/home/runner/work/immunisation-batch/immunisation-batch/filenameprocessor/coverage_html_report"

      - name: Upload filenameprocessor coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: filenameprocessor-coverage-report
          path: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/filenameprocessor/coverage_html_report"

      # - name: Run unit tests and generate coverage report for recordprocessor
      #   run: |
      #     poetry run coverage run -m unittest discover -s tests
      #     poetry run coverage report
      #     poetry run coverage html -d coverage_html_report
      #   working-directory: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/recordprocessor"
      #   continue-on-error: true

      # - name: Upload recordprocessor coverage report as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: recordprocessor-coverage-report
      #     path: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/recordprocessor/coverage_html_report"

      # - name: Run unit tests and generate coverage report for recordforwarder
      #   run: |
      #     poetry run coverage run -m unittest discover -s tests
      #     poetry run coverage report
      #     poetry run coverage html -d coverage_html_report
      #   working-directory: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/recordforwarder"
      #   continue-on-error: true

      # - name: Upload recordforwarder coverage report as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: recordforwarder-coverage-report
      #     path: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/recordforwarder/coverage_html_report"

      - name: Set code coverage commit status
        run: npx -p check-code-coverage set-gh-status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check ticket name conforms to requirements
        run: echo ${{ github.event.pull_request.head.ref }} | grep -i -E -q "(apm-[0-9]+)|(apmspii-[0-9]+)|(adz-[0-9]+)|(amb-[0-9]+)|(dependabot\/)"
        continue-on-error: true

      - name: Grab ticket name
        if: contains(github.event.pull_request.head.ref, 'apm-') || contains(github.event.pull_request.head.ref, 'APM-') || contains(github.event.pull_request.head.ref, 'apmspii-') || contains(github.event.pull_request.head.ref, 'APMSPII-') || contains(github.event.pull_request.head.ref, 'adz-') || contains(github.event.pull_request.head.ref, 'ADZ-') || contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-')
        run: echo ::set-env name=TICKET_NAME::$(echo ${{ github.event.pull_request.head.ref }} | grep -i -o '\(apm-[0-9]\+\)\|\(apmspii-[0-9]\+\)\|\(adz-[0-9]\+\)|\(amb-[0-9]\+\)' | tr '[:lower:]' '[:upper:]')
        continue-on-error: true
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Comment on PR with link to JIRA ticket
        if: contains(github.event.pull_request.head.ref, 'apm-') || contains(github.event.pull_request.head.ref, 'APM-') || contains(github.event.pull_request.head.ref, 'apmspii-') || contains(github.event.pull_request.head.ref, 'APMSPII-') || contains(github.event.pull_request.head.ref, 'adz-') || contains(github.event.pull_request.head.ref, 'ADZ-') || contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-')
        continue-on-error: true
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            This branch is work on a ticket in the NHS Digital APM JIRA Project. Here's a handy link to the ticket:
            # [${{ env.TICKET_NAME }}](https://nhsd-jira.digital.nhs.uk/browse/${{ env.TICKET_NAME}})

